name: build

on:
  push:
    branches: ["*"]
  pull_request:

jobs:
  pre-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry

      - name: Check poetry.lock
        run: |
          poetry env use ${{ matrix.python-version }}
          poetry lock --check

      - name: Install dependencies
        run: |
          poetry env use ${{ matrix.python-version }}
          poetry install --no-root --only build --no-ansi --no-interaction
          poetry run pip install -c tests/pip-constraints.txt .

      - name: Lint
        run: poetry run poe lint

      - name: Test Coverage
        run: poetry run poe test-cov

      - name: Coveralls Parallel
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: run-${{ matrix.python-version }}
          parallel: true

  build:
    runs-on: ubuntu-latest
    needs: pre-build
    strategy:
      matrix:
        python-version: ["3.11", "3.10", "3.9"]
    steps:
      - uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry

      - name: Install dependencies
        run: |
          poetry env use ${{ matrix.python-version }}
          poetry install --no-root --only build --no-ansi --no-interaction
          poetry run pip install -c tests/pip-constraints.txt .

      - name: Test Coverage
        run: poetry run poe test-cov

      - name: Coveralls Parallel
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: run-${{ matrix.python-version }}
          parallel: true

  finish:
    runs-on: ubuntu-latest
    needs: [pre-build, build]
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
